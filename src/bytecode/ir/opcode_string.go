// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package ir

import "fmt"

const _Opcode_name = "OpEmptyOpReturnOpCallOpConstRefOpStackRefOpStackSetOpDropOpVarRefOpVarSetOpSetCarOpSetCdrOpCarOpCdrOpArrayRefOpArraySetOpSubstrOpConcatOpStringEqOpStringLtOpToLowerOpToUpperOpIsConsOpIsStringOpIsNumOpIsIntOpNumAddOpNumAdd1OpNumSubOpNumSub1OpNumMulOpNumQuoOpNumEqOpNumLtOpNumLteOpNumGtOpNumGteOpNumNegOpNumMaxOpNumMinOpRemOpEqOpEqualOpNotOpMakeListOpMakeConsOpCatchOpJmpOpJmpNilOpJmpNotNilOpJmpNilElsePopOpJmpNotNilElsePopOpRelJmpOpRelJmpNilOpRelJmpNotNilOpRelJmpNilElsePopOpRelJmpNotNilElsePop"

var _Opcode_index = [...]uint16{0, 7, 15, 21, 31, 41, 51, 57, 65, 73, 81, 89, 94, 99, 109, 119, 127, 135, 145, 155, 164, 173, 181, 191, 198, 205, 213, 222, 230, 239, 247, 255, 262, 269, 277, 284, 292, 300, 308, 316, 321, 325, 332, 337, 347, 357, 364, 369, 377, 388, 403, 421, 429, 440, 454, 472, 493}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
