// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package ir

import "fmt"

const _Opcode_name = "OpReturnOpCallOpConstRefOpStackRefOpStackSetOpDropOpVarRefOpVarSetOpSetCarOpSetCdrOpArrayRefOpArraySetOpSubstrOpConcatOpStringEqOpStringLtOpToLowerOpToUpperOpIsConsOpIsStringOpIsNumOpIsIntOpNumAddOpNumAdd1OpNumSubOpNumSub1OpNumMulOpNumDivOpNumEqOpNumLtOpNumLteOpNumGtOpNumGteOpNumNegOpNumMaxOpNumMinOpRemOpEqOpEqualOpNotOpMakeListOpMakeConsOpCatchOpJmpOpJmpNilOpJmpNotNilOpJmpNilElsePopOpJmpNotNilElsePopOpRelJmpOpRelJmpNilOpRelJmpNotNilOpRelJmpNilElsePopOpRelJmpNotNilElsePop"

var _Opcode_index = [...]uint16{0, 8, 14, 24, 34, 44, 50, 58, 66, 74, 82, 92, 102, 110, 118, 128, 138, 147, 156, 164, 174, 181, 188, 196, 205, 213, 222, 230, 238, 245, 252, 260, 267, 275, 283, 291, 299, 304, 308, 315, 320, 330, 340, 347, 352, 360, 371, 386, 404, 412, 423, 437, 455, 476}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
