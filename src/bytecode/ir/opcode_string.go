// Code generated by "stringer -type=Opcode"; DO NOT EDIT.

package ir

import "fmt"

const _Opcode_name = "OpEmptyOpReturnOpCallOpConstRefOpStackRefOpStackSetOpDropOpVarRefOpVarSetOpSetCarOpSetCdrOpCarOpCdrOpArrayRefOpArraySetOpSubstrOpConcatOpStringEqOpStringLtOpToLowerOpToUpperOpIsConsOpIsStringOpIsNumOpIsIntOpIsSymbolOpNumAddOpNumAdd1OpNumSubOpNumSub1OpNumMulOpNumQuoOpNumEqOpNumLtOpNumLteOpNumGtOpNumGteOpNumNegOpNumMaxOpNumMinOpRemOpEqOpEqualOpNotOpMakeListOpMakeConsOpCatchOpJmpOpJmpNilOpJmpNotNilOpJmpNilElsePopOpJmpNotNilElsePopOpRelJmpOpRelJmpNilOpRelJmpNotNilOpRelJmpNilElsePopOpRelJmpNotNilElsePop"

var _Opcode_index = [...]uint16{0, 7, 15, 21, 31, 41, 51, 57, 65, 73, 81, 89, 94, 99, 109, 119, 127, 135, 145, 155, 164, 173, 181, 191, 198, 205, 215, 223, 232, 240, 249, 257, 265, 272, 279, 287, 294, 302, 310, 318, 326, 331, 335, 342, 347, 357, 367, 374, 379, 387, 398, 413, 431, 439, 450, 464, 482, 503}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
